      VERSION=( "0.2" "20031123" )
      CATEGORY="utility"
     ATTRIBUTE="console new"
#        SOURCE="%7Edeforest/sonypidd"
#           URL="http://www.boulder.swri.edu"
        SOURCE="sw/sonypidd-$VERSION"
           URL="http://linux.highsphere.net/"
      HOMEPAGE="http://www.boulder.swri.edu/%7Edeforest/sonypidd"
           REQ="perl aumix sox spicctrl sonypid"
	   DIR="sonypid-$VERSION"
      ESTIMATE=""
          DESC="sonypidd moitors sonypi events on Sony VAIO laptops
and does things. Requires the sonypid daemon as 
input, and the spicctrl, aumix, and sox programs for output.

There is a table of actions to take for each sonypi function-key event.  
Only a few of the events (notably brightness and loudness) are used.
 
There is currently no support for anything other than function-key
events -- but it should be obvious where to add that functionality.

The external commands may need customization for your system.
"

function build() {
  sed  -i  "s:/usr/local:/usr:"   sonypidd
  sed  -i  's:^$click.*:$click = "/usr/bin/play /usr/share/sounds/KDE_Click.wav";:'	sonypidd
  sed  -i  's:, undef.*# 12:, ["hibernate"]\t\t   # 12:'	sonypidd

  prepare_install                               &&
  cp	sonypidd	/usr/bin                &&
  chown root.root	/usr/bin/sonypidd	&&
  chmod 755		/usr/bin/sonypidd	&&
  write_sonypid_to_initd                   	&&
  chmod 700		/etc/init.d/sonypid	

}

function pre_build() {
	FN="$(  guess_filename  ${SOURCE}  $SOURCE_CACHE/$BSPELL/$VERSION  )"

	cp	${FN}	${BUILD_DIR}
}

function write_sonypid_to_initd() {
cat << EOF > /etc/init.d/sonypid
#!/bin/sh

### BEGIN INIT INFO
# Provides: sonypid
# Required-Start: \$local_fs module-init-tools
# Required-Stop: 
# Default-Start:  3 4 5
# Default-Stop: 0 1 6
# Short-Description: sonypid monitors sonypi events on Sony VAIO laptops
# Description: sonypid monitors sonypi events on Sony VAIO laptops
### END INIT INFO

. /lib/lsb/init-functions

SONYPID_CMD="/usr/bin/sonypidd"
PERL_CMD=\$( which perl )

sonypid_pid() {
        echo \$( pgrep -f "\$PERL_CMD \$SONYPID_CMD" )
}

start() {
        MSG="Starting sonypid daemon"
        PID=\$( sonypid_pid )
        if [ "x\$PID" == "x" ]; then
                \$SONYPID_CMD >/dev/null 2>&1            &&
                log_success_msg "\$MSG"  ||  log_failure_msg "\$MSG"
        else
                log_success_msg "\$MSG"
        fi
}

stop() {
        MSG="Stopping sonypid daemon"
        PID=\$( sonypid_pid )
        if [ "x\$PID" == "x" ]; then
                log_success_msg "\$MSG"
        else
                kill \$PID  &&
                log_success_msg "\$MSG"  ||  log_failure_msg "\$MSG"
        fi
}

case "\$1" in 
	start)		start	;;
	stop)		stop	;;
	restart)	stop; start	;;
	*)		echo "Usage: \$( basename \$0 ) {start|stop|restart}"
esac
EOF
}

post_install() {
 /lib/lsb/install_initd  /etc/init.d/sonypid
}
